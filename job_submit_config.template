##################################################################################################
# Update desired job submission options using key=value pairs below. If an option is not needed, #
# it can remain unset or commented out. Only uncommented lines will be parsed. Full descriptions #
# of all job submission options can be found at https://slurm.schedmd.com/sbatch.html            #
##################################################################################################

# Charge resources used by this job to specified account
account=

# Tell the controller to defer the allocation of the job until the specified time.
# Example time formats include 08:00:00 (24hr clock), now+1hour, now+60 (sec by default)
# 2024-10-31T23:59:59 (omission of time defaults to midnight)
begin=

# Node features that are required by job.
constraint=

# Request that ncpus processors be allocated per allocated GPU. Incompatible with "cpus-per-task"
cpus-per-gpu=

# Request that ncpus processors be allocated per allocated task. Incompatible with "cpus-per-gpu"
cpus-per-task=

# Connect the batch script's standard error directly to the file name specified. By default
# stdout and stderr are written to the same file. The default filename is "slurm-%j.out", where 
# the "%j" is replaced by the job ID.
error=

# Explicitly exclude certain nodes from the resources granted to the job.
exclude=

# Specify the total number of GPUs required for the job, with an optional type specification.
# Examples include "gpus=1" or "gpus=A100:1"
gpus=

# Specify the number of GPUs required for the job on each node included in the job's resource
# allocation. An optional GPU type specification can be supplied. Examples include 
# "gpus-per-node=1" or "gpus-per-node=A100:1"
gpus-per-node=

# Specify the number of GPUs required for the job on each socket included in the job's resource
# allocation. An optional GPU type specification can be supplied. Requires "sockets-per-node=".
# Examples include "gpus-per-socket=1" or "gpus-per-socket=A100:1"
gpus-per-socket=

# Specify the number of GPUs required for the job on each task to be spawned in the job's 
# resource allocation. An optional GPU type specification can be supplied. Requires an explicit
# task count, e.g. "ntasks=" or "gpus= gpus-per-task=". Examples include gpus-per-task=1 or 
# gpus-per-task=A100:1
gpus-per-task=

# Specifies a comma-delimited list of generic consumable resources. The format for each entry
# in the list is "name[[:type]:count]". The specified resources will be allocated to the job on
# each node. Examples include "gres=gpu:1" or "gres=gpu:A100:1"
gres=

# Notify user by email when certain event types occur. Common type values are NONE, BEGIN, END, 
# FAIL, and ALL.
mail-type=

# User to receive email notification of state changes as defined by --mail-type. This may be a 
# full email address or a username.
mail-user=

# Specify the real memory required per node. Default units are megabytes. Different units can 
# be specified using the suffix [K|M|G|T]. "mem", "mem-per-cpu", and "mem-per-gpu" are mutually
# exclusive.
mem=

# Minimum memory required per usable allocated CPU. Default units are megabytes. Different units
# can be specified using the suffix [K|M|G|T]. "mem", "mem-per-cpu", and "mem-per-gpu" are 
# mutually exclusive.
mem-per-cpu=

# Minimum memory required per usable allocated GPU. Default units are megabytes. Different units
# can be specified using the suffix [K|M|G|T]. "mem", "mem-per-cpu", and "mem-per-gpu" are 
# mutually exclusive.
mem-per-gpu=

# Request a specific list of hosts. The job will contain all of these hosts and possibly 
# additional hosts as needed to satisfy resource requirements.
nodelist=

# Request the number of distinct nodes to be allocated to this job. If -N is not specified, the
# default behavior is to allocate enough nodes to satisfy the requested resources as expressed
# by per-job specification options
nodes=

# Advises the Slurm controller that job steps run within the allocation will launch a maximum 
# of number tasks and to provide for sufficient resources.
ntasks=

# Request the maximum ntasks be invoked on each core. Meant to be used with the "ntasks" option.
# Related to "ntasks-per-node" except at the core level instead of the node level. 
ntasks-per-core=

# Request that there are ntasks tasks invoked for every GPU. This option can work in two ways: 
# 1) either specify "ntasks" in addition, in which case a type-less GPU specification will be 
# automatically determined to satisfy "ntasks-per-gpu", or 2) specify the GPUs wanted (e.g. via
# "gpus" or "gres") without specifying "ntasks", and the total task count will be automatically 
# determined. Incompatible with "gpus-per-task", "gpus-per-socket", or "ntasks-per-node"
ntasks-per-gpu=

# Request that ntasks be invoked on each node. If used with the "ntasks" option, the "ntasks"
# option will take precedence and the "ntasks-per-node" will be treated as a maximum count of 
# tasks per node. Meant to be used with the "nodes" option.
ntasks-per-node=

# Request the maximum ntasks be invoked on each socket. Meant to be used with the "ntasks" option. 
ntasks-per-socket=

# Connect the batch script's standard output directly to the file name specified. By default
# stdout and stderr are written to the same file. The default filename is "slurm-%j.out", where 
# the "%j" is replaced by the job ID.
output=

# Request a specific partition for the resource allocation. 
partition=

# Node features that are desired but not required by their job using the prefer option. This 
# option operates independently from "constraint" and will override whatever is set there if possible.
prefer=

# Request a quality of service for the job. Users will be limited to their association's defined set
# of QOS.
qos=

# Allocate resources for the job from the named reservation.
reservation=

# Restrict node selection to nodes with at least the specified number of threads per core
threads-per-core=

# Set a limit on the total run time of the job allocation. Acceptable time formats include "minutes", 
# "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and 
# "days-hours:minutes:seconds". 
time=

# Specify a minimum amount of temporary disk space per node. Default units are megabytes. Different 
# units can be specified using the suffix [K|M|G|T]. 
tmp=

# Specifies a comma-delimited list of trackable resources required for the job on each task to be 
# spawned in the job's resource allocation. The format for each entry in the list is 
# "trestype[/tresname]:count". Examples include "tres-per-task=cpu:4 or "tres-per-task=gres/gpu:1"
tres-per-task=
